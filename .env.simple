# Simple environment file to enable one-time Drupal + CiviCRM autoinstall
# Copy this to .env and edit secrets before bringing containers up.
#
# SECTION 1: Distinct configuration values (single source of truth)
# These are the values you should edit for your environment.

# -- Database (shared by Drupal and CiviCRM) ---------------------------------
DB_HOST=db
DB_PORT=3306
DB_NAME=drupal
DB_USER=drupal
DB_PASS=secret

# MariaDB root password (distinct value; edit for production)
MARIADB_ROOT_PASSWORD=secret

# -- Drupal site / admin -----------------------------------------------------
SITE_NAME="Cocoa County Drupal"
ADMIN_NAME=admin
ADMIN_PASS=admin

# -- CiviCRM / CMS URL ------------------------------------------------------
# Should include scheme and host (and port if not 80/443)
CMS_BASE_URL=http://localhost:8080

# -- HTTP port exposed by compose (used to build default CMS URL if needed)
HTTP_PORT=8080


# SECTION 2: Script-facing variables (map to section 1)
# These are the variables used by `docker/drupal-entrypoint.sh` and drush/cv.

# Startup / DB checks
SKIP_DB_CHECK=0
# If 1, require DB connection; entrypoint will exit non-zero if DB check fails
DB_REQUIRED=1

# Drupal auto-install (one-time; entrypoint checks for settings.php)
AUTO_INSTALL=1
# If 1, fail the container if autoinstall fails.
AUTO_INSTALL_REQUIRED=1

# Values used by drush site:install (map from SECTION 1)
DRUPAL_SITE_NAME=${SITE_NAME}
ADMIN_USER=${ADMIN_NAME}
ADMIN_PASS=${ADMIN_PASS}
# Path to Drupal web root used by drush (adjust if your image uses a different path)
DRUSH_ROOT=/opt/drupal/web

# Database connection settings (used to build the DB URL for drush)
# These default names mirror common docker-compose service names.
DRUPAL_DB_HOST=${DB_HOST}
DRUPAL_DB_PORT=${DB_PORT}
# DRUPAL_DB_NAME or DB_NAME may be used by the script
DRUPAL_DB_NAME=${DB_NAME}
DB_NAME=${DB_NAME}
DRUPAL_DB_USER=${DB_USER}
DB_USER=${DB_USER}
# Plaintext password; prefer injecting at runtime from a secret store
DRUPAL_DB_PASSWORD=${DB_PASS}
DB_PASSWORD=${DB_PASS}

# MariaDB container settings (mapped from section 1)
MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
MARIADB_DATABASE=${DB_NAME}
MARIADB_USER=${DB_USER}
MARIADB_PASSWORD=${DB_PASS}

# Path to write the drupal install log (optional)
DRUPAL_INSTALL_LOG=/var/log/drupal-install.log

# CiviCRM install options
# Set to 1 to run `cv core:install` from the CMS root
CIVICRM_INSTALL=1
# If 1, fail container if CiviCRM install fails
CIVICRM_INSTALL_REQUIRED=1
# Base URL for the CMS (cv requires a reachable URL). Use proper scheme + host.
CIVICRM_CMS_BASE_URL=${CMS_BASE_URL}
# Database DSN for CiviCRM (example). Keep secrets out of VCS.
# Format: mysql://user:pass@host:3306/dbname
CIVICRM_DB_DSN=mysql://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}

# Path to Drupal root used by cv (defaults to DRUSH_ROOT or /var/www/html)
CV_ROOT=${DRUSH_ROOT}
# Path to write the civicrm install log (optional)
CIVICRM_INSTALL_LOG=/var/log/civicrm-install.log

# Optional: HTTP port exposed by compose (used to generate default CMS URL)
PORT_HTTP=${HTTP_PORT}

# Useful defaults (tweak as needed)
PHP_MEMORY_LIMIT=256M

# Notes:
# - This file purposely stores plaintext DB credentials for simplicity. Do not
#   commit production secrets. Use a secret manager or CI to inject sensitive
#   values in production environments.
# - To run the automated installs, copy this file to .env in the project root:
#     cp .env.simple .env
#   then bring the stack up with docker compose.